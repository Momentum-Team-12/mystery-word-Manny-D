# MVP
1. computer read file -> working
with open('test-word.txt') as f:
        word_string = f.read()
        word_list = word_string.split()
        current_word = random.choice(word_list)


2. start with test_word.txt (one word) -> working
same as above => have to update ('test-word.txt') to ('words.txt')


3. tell user how many letters word has -> working
print(len(word)) ?
print("Ok.. let's play!\n" "Your word is", len(current_word), "letters long.")

4 Ask user to guess one letter -> working
input("Shall we play a game?\n")
guess = input("\nPlease enter 1 letter to guess: ")


5. Tell the user if the guess is in the word
same as 6

6. Display partially guessed word like in Wheel of Fortune
for char in current_word:
            if char in answer:
                print(char, end = "")
        
            elif char not in answer:
                print("*", end = "")
                w += 1



7. game ends when player guesses word
if w == 0: # works but want to try something different
            print("\nYou did it!\nThe Mystery Word was " + current_word + " and was solved in " + str(8 - count) + " guesses!")
            exit()
    


*MVP's done*


# 2.0
1. design the word selection after the game logic
?

2. computer chooses random word -> done
current_word = random.choice(word_list)

3. validate guess - make sure is only one letter
tbd

4. limit user to 8 guesses, game ends if user runs out of guesses
count = 8
elif count == 0:
            print("No more guesses left. The word was " + current_word)

5. user guesses same letter twice, do not take away a guess
tbd


6. print message that they can guess again
if answer not in current_word:
            count -= 1
            print("Sorry, try again!\nYou have " + str(count) + " guesses remaining)")